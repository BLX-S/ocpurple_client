{"remainingRequest":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/src/views/Login.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/src/views/Login.vue","mtime":1553847554000},{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/cache-loader/dist/cjs.js","mtime":1575024382845},{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/cache-loader/dist/cjs.js","mtime":1575024382845},{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\n\n@Component\nexport default class Login extends Vue {\n  username = \"\";\n  password = \"\";\n  submitted = false;\n\n  get usernameValid() {\n    return true;\n  }\n  get passwordValid() {\n    return true;\n  }\n  onLogin(ev: any) {\n    ev.preventDefault();\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"ion-page\">\n    <ion-header>\n      <ion-toolbar color=\"primary\">\n        <ion-buttons slot=\"start\">\n          <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Login</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <div class=\"login-logo\">\n        <img src=\"/assets/img/appicon.svg\" alt=\"Ionic logo\">\n      </div>\n\n      <form novalidate>\n        <ion-list>\n          <ion-item>\n            <ion-label position=\"stacked\" color=\"primary\">Username</ion-label>\n            <ion-input\n              v-model=\"username\"\n              name=\"username\"\n              type=\"text\"\n              spellcheck=\"false\"\n              autocapitalize=\"off\"\n              required\n            ></ion-input>\n          </ion-item>\n\n          <ion-text color=\"danger\">\n            <p v-show=\"!usernameValid || submitted == true\" padding-left>Username is required</p>\n          </ion-text>\n\n          <ion-item>\n            <ion-label position=\"stacked\" color=\"primary\">Password</ion-label>\n            <ion-input v-model=\"password\" name=\"password\" type=\"password\" required></ion-input>\n          </ion-item>\n\n          <ion-text color=\"danger\">\n            <p v-show=\"!passwordValid || submitted == true\" padding-left>Password is required</p>\n          </ion-text>\n        </ion-list>\n\n        <ion-row responsive-sm>\n          <ion-col>\n            <ion-button @click=\"onLogin(loginForm)\" type=\"submit\" expand=\"block\">Login</ion-button>\n          </ion-col>\n          <ion-col>\n            <ion-button @click=\"onSignup()\" color=\"light\" expand=\"block\">Signup</ion-button>\n          </ion-col>\n        </ion-row>\n      </form>\n    </ion-content>\n  </div>\n</template>\n\n<style scoped>\n.login-logo {\n  padding: 20px 0;\n  min-height: 200px;\n  text-align: center;\n}\n\n.login-logo img {\n  max-width: 150px;\n}\n\n.list {\n  margin-bottom: 0;\n}\n</style>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\n\n@Component\nexport default class Login extends Vue {\n  username = \"\";\n  password = \"\";\n  submitted = false;\n\n  get usernameValid() {\n    return true;\n  }\n  get passwordValid() {\n    return true;\n  }\n  onLogin(ev: any) {\n    ev.preventDefault();\n  }\n}\n</script>\n"]}]}