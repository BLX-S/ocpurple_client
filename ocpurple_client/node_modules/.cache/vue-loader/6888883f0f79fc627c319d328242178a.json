{"remainingRequest":"/Users/Michael/Documents/temptest/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Michael/Documents/temptest/src/views/SpeakerList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/Michael/Documents/temptest/src/views/SpeakerList.vue","mtime":1553847554000},{"path":"/Users/Michael/Documents/temptest/node_modules/cache-loader/dist/cjs.js","mtime":1575024382845},{"path":"/Users/Michael/Documents/temptest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Michael/Documents/temptest/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/Michael/Documents/temptest/node_modules/cache-loader/dist/cjs.js","mtime":1575024382845},{"path":"/Users/Michael/Documents/temptest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport { mapGetters } from \"vuex\";\nimport { Speaker } from \"@/store/modules/speakers\";\nimport { Session } from \"@/store/modules/sessions\";\n\n@Component\nexport default class SpeakerList extends Vue {\n  get speakers() {\n    return this.$store.state.speakers.speakers.concat().sort();\n  }\n\n  sessionsBySpeaker(speakerId: number) {\n    return this.$store.state.sessions.sessions.filter(\n      (s: Session) => s.speakerIds.indexOf(speakerId) !== -1\n    );\n  }\n  goToSessionDetail(session: Session) {\n    this.$router.push({\n      name: \"speaker-session-detail\",\n      params: { sessionId: session.id.toString() }\n    });\n  }\n  goToSpeakerDetail(speaker: Speaker) {\n    this.$router.push({\n      name: \"speaker-detail\",\n      params: { speakerId: speaker.id.toString() }\n    });\n  }\n  async gotToOffsite(msg: string) {\n    const loading = await this.$ionic.loadingController.create({\n      message: msg,\n      duration: Math.random() * 1000 + 500\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n  }\n}\n",{"version":3,"sources":["SpeakerList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SpeakerList.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"ion-page\">\n    <ion-header>\n      <ion-toolbar color=\"primary\">\n        <ion-buttons slot=\"start\">\n          <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title>Speakers</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"outer-content\">\n      <ion-list>\n        <ion-grid fixed>\n          <ion-row align-items-stretch>\n            <ion-col size=\"12\" size-md=\"6\" v-for=\"speaker in speakers\" :key=\"speaker.id\">\n              <ion-card class=\"speaker-card\">\n                <ion-card-header>\n                  <ion-item detail=\"false\" lines=\"none\" button @click=\"goToSpeakerDetail(speaker)\">\n                    <ion-avatar slot=\"start\">\n                      <img v-bind:src=\"speaker.profilePic\" alt=\"Speaker profile pic\">\n                    </ion-avatar>\n                    {{speaker.name}}\n                  </ion-item>\n                </ion-card-header>\n\n                <ion-card-content>\n                  <ion-list>\n                    <ion-item\n                      v-for=\"session in sessionsBySpeaker(speaker.id)\"\n                      button\n                      @click=\"goToSessionDetail(session)\"\n                      :key=\"session.id\"\n                    >\n                      <h3>{{session.name}}</h3>\n                    </ion-item>\n\n                    <ion-item button @click=\"goToSpeakerDetail(speaker)\">\n                      <h3>About {{speaker.name}}</h3>\n                    </ion-item>\n                  </ion-list>\n                </ion-card-content>\n\n                <ion-row no-padding justify-content-center>\n                  <ion-col text-left size=\"4\">\n                    <ion-button\n                      fill=\"clear\"\n                      size=\"small\"\n                      color=\"primary\"\n                      @click=\"gotToOffsite('Tweet')\"\n                    >\n                      <ion-icon name=\"logo-twitter\" slot=\"start\"></ion-icon>Tweet\n                    </ion-button>\n                  </ion-col>\n                  <ion-col text-center size=\"4\">\n                    <ion-button\n                      fill=\"clear\"\n                      size=\"small\"\n                      color=\"primary\"\n                      @click=\"gotToOffsite('Share')\"\n                    >\n                      <ion-icon name=\"share-alt\" slot=\"start\"></ion-icon>Share\n                    </ion-button>\n                  </ion-col>\n                  <ion-col text-right size=\"4\">\n                    <ion-button\n                      fill=\"clear\"\n                      size=\"small\"\n                      color=\"primary\"\n                      @click=\"gotToOffsite('Contact')\"\n                    >\n                      <ion-icon name=\"chatboxes\" slot=\"start\"></ion-icon>Contact\n                    </ion-button>\n                  </ion-col>\n                </ion-row>\n              </ion-card>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-list>\n    </ion-content>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport { mapGetters } from \"vuex\";\nimport { Speaker } from \"@/store/modules/speakers\";\nimport { Session } from \"@/store/modules/sessions\";\n\n@Component\nexport default class SpeakerList extends Vue {\n  get speakers() {\n    return this.$store.state.speakers.speakers.concat().sort();\n  }\n\n  sessionsBySpeaker(speakerId: number) {\n    return this.$store.state.sessions.sessions.filter(\n      (s: Session) => s.speakerIds.indexOf(speakerId) !== -1\n    );\n  }\n  goToSessionDetail(session: Session) {\n    this.$router.push({\n      name: \"speaker-session-detail\",\n      params: { sessionId: session.id.toString() }\n    });\n  }\n  goToSpeakerDetail(speaker: Speaker) {\n    this.$router.push({\n      name: \"speaker-detail\",\n      params: { speakerId: speaker.id.toString() }\n    });\n  }\n  async gotToOffsite(msg: string) {\n    const loading = await this.$ionic.loadingController.create({\n      message: msg,\n      duration: Math.random() * 1000 + 500\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n  }\n}\n</script>\n"]}]}