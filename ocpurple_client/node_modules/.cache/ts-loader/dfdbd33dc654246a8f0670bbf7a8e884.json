{"remainingRequest":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/babel-loader/lib/index.js!/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/ts-loader/index.js??ref--13-2!/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/src/store/modules/speakers.ts","dependencies":[{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/src/store/modules/speakers.ts","mtime":1553847554000},{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/cache-loader/dist/cjs.js","mtime":1575024382845},{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nvar speakerStore = {\n  state: {\n    speakers: []\n  },\n  mutations: {\n    updateSpeakers: function updateSpeakers(state, speakers) {\n      state.speakers = speakers;\n    }\n  },\n  actions: {\n    loadSpeakerData: function () {\n      var _loadSpeakerData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref) {\n        var commit, response, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return fetch('/data/speakers.json');\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context.sent;\n                commit('updateSpeakers', data);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function loadSpeakerData(_x) {\n        return _loadSpeakerData.apply(this, arguments);\n      };\n    }()\n  }\n};\nexport default speakerStore;",{"version":3,"sources":["/Users/Michael/Documents/GIT/ocpurple_client/ocpurple_client/src/store/modules/speakers.ts"],"names":[],"mappings":";;AAiBA,IAAM,eAAyC;AAC7C,SAAO;AACL,cAAU;AADL,GADsC;AAI7C,aAAW;AACT,kBADS,0BACM,KADN,EACa,QADb,EACgC;AACvC,YAAM,QAAN,GAAiB,QAAjB;AACD;AAHQ,GAJkC;AAS7C,WAAS;AACD,mBADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACiB,sBADjB,QACiB,MADjB;AAAA;AAAA,uBAEkB,MAAM,qBAAN,CAFlB;;AAAA;AAEC,wBAFD;AAAA;AAAA,uBAGc,SAAS,IAAT,EAHd;;AAAA;AAGC,oBAHD;AAIL,uBAAO,gBAAP,EAAyB,IAAzB;;AAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAToC,CAA/C;AAkBA,eAAe,YAAf","sourcesContent":["import { Module } from 'vuex';\n\nexport interface Speaker {\n  id: number,\n  name: string,\n  profilePic: string,\n  twitter: string,\n  about: string,\n  location: string,\n  email: string,\n  phone: string\n}\n\nexport interface SpeakerState {\n  speakers: Speaker[]\n}\n\nconst speakerStore: Module<SpeakerState, {}> = {\n  state: {\n    speakers: []\n  },\n  mutations: {\n    updateSpeakers(state, speakers: Speaker[]) {\n      state.speakers = speakers;\n    },\n  },\n  actions: {\n    async loadSpeakerData({ commit }) {\n      const response = await fetch('/data/speakers.json');\n      const data = await response.json();\n      commit('updateSpeakers', data);\n    }\n  }\n};\n\nexport default speakerStore;\n"],"sourceRoot":""}]}